{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Section/Section.js","App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css"],"names":["ContactForm","onAddContact","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","onSubmit","preventDefault","className","s","input","type","onChange","pattern","title","required","ContactItem","id","deleteContact","onClick","ContactList","contacts","map","Filter","onChangeFilter","label","Section","children","container","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","contact","uuidv4","find","prevState","alert","normalizedFilter","toLocaleLowerCase","includes","filteredVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.96ba785b.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onAddContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitForm = (event) => {\n    event.preventDefault();\n    onAddContact(name, number);\n    reset();\n  };\n  const reset = () => {\n    setNumber(\"\");\n    setName(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nconst ContactItem = ({ id, number, name, deleteContact }) => {\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => deleteContact(id)}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nconst ContactList = ({ contacts, deleteContact }) => (\n  <ul>\n    {contacts.map(({ id, number, name }) => (\n      <li key={id} name={name}>\n        <ContactItem\n          id={id}\n          name={name}\n          number={number}\n          deleteContact={deleteContact}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      ></input>\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nexport default function Section({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Section from \"./Components/Section/Section\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\") ?? []);\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n  const onAddContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      return setContacts((prevState) => [contact, ...prevState]);\n    }\n  };\n  const onChangeFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const filteredVisibleContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={onAddContact} />\n      </Section>\n      <Section>\n        <h2>My Contacts</h2>\n        <Filter value={filter} onChangeFilter={onChangeFilter} />\n      </Section>\n      <Section>\n        <ContactList\n          contacts={filteredVisibleContacts()}\n          deleteContact={deleteContact}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3JIFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__21lFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3NTEj\"};"],"sourceRoot":""}